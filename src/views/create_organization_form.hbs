<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</title>
    <style>
        * {
            box-sizing: border-box;
            margin: 0;
            padding: 0;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
        }

        .container {
            background: white;
            border-radius: 15px;
            box-shadow: 0 15px 35px rgba(0, 0, 0, 0.1);
            padding: 40px;
            width: 100%;
            max-width: 500px;
        }

        h1 {
            text-align: center;
            color: #333;
            margin-bottom: 30px;
            font-weight: 600;
        }

        .form-group {
            margin-bottom: 25px;
        }

        label {
            display: block;
            margin-bottom: 8px;
            font-weight: 500;
            color: #555;
        }

        input[type="text"],
        input[type="file"],
        textarea {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #ddd;
            border-radius: 8px;
            font-size: 16px;
            transition: border-color 0.3s ease;
        }

        input[type="text"]:focus,
        input[type="file"]:focus,
        textarea:focus {
            outline: none;
            border-color: #667eea;
        }

        .file-input-wrapper {
            position: relative;
            overflow: hidden;
            display: inline-block;
            width: 100%;
        }

        .file-input-wrapper input[type="file"] {
            position: absolute;
            left: 0;
            top: 0;
            opacity: 0;
            cursor: pointer;
            height: 100%;
        }

        .file-input-button {
            background: #667eea;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 500;
            display: inline-block;
            transition: background 0.3s ease;
            width: 100%;
            text-align: center;
        }

        .file-input-button:hover {
            background: #5a67d8;
        }

        .file-name {
            margin-top: 10px;
            font-size: 14px;
            color: #666;
            text-align: center;
        }

        .btn-submit {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 15px 30px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 18px;
            font-weight: 600;
            width: 100%;
            transition: transform 0.2s ease;
        }

        .btn-submit:hover {
            transform: translateY(-2px);
        }

        .btn-submit:active {
            transform: translateY(0);
        }

        .error {
            color: #e53e3e;
            font-size: 14px;
            margin-top: 5px;
            display: none;
        }

        .success {
            color: #38a169;
            font-size: 14px;
            margin-top: 10px;
            text-align: center;
            display: none;
        }

        .file-preview {
            margin-top: 20px;
            text-align: center;
        }

        .file-preview img {
            max-width: 100%;
            max-height: 200px;
            border-radius: 8px;
            display: none;
        }

        .pdf-preview {
            background-color: #f5f5f5;
            border-radius: 8px;
            padding: 20px;
            margin-top: 10px;
            display: none;
        }

        .pdf-icon {
            font-size: 48px;
            color: #e53e3e;
        }

        .file-type {
            margin-top: 10px;
            font-weight: 500;
            color: #667eea;
            display: none;
        }
        
        .server-message {
            padding: 10px;
            border-radius: 5px;
            margin-bottom: 20px;
            text-align: center;
            display: none;
        }
        
        .server-error {
            background-color: #fee;
            color: #c33;
            border: 1px solid #fcc;
        }
        
        .server-success {
            background-color: #efe;
            color: #363;
            border: 1px solid #cfc;
        }
    </style>
</head>
<body>
    <div class="container">
        <h1>–°–æ–∑–¥–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏</h1>
        
        <!-- –°–æ–æ–±—â–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞ -->
        <div class="server-message" id="serverMessage"></div>
       
        <form id="uploadForm" action="/organizations/create" method="POST" enctype="multipart/form-data">
            
            <div class="form-group">
                <label for="file">–î–æ–±–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ PDF –∫–∞—Ä—Ç–æ—á–∫–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:</label>
                <div class="file-input-wrapper">
                    <div class="file-input-button">–í—ã–±—Ä–∞—Ç—å —Ñ–∞–π–ª</div>
                    <input type="file" id="file" name="file" accept=".jpg,.jpeg,.png,.gif,.pdf,.PDF" required>
                </div>
                <div class="file-name" id="fileName">–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω</div>
                <div class="error" id="fileError">–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª</div>
            </div>

            <div class="file-preview">
                <img id="imagePreview" src="#" alt="–ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä">
                <div class="pdf-preview" id="pdfPreview">
                    <div class="pdf-icon">üìÑ</div>
                    <div>PDF –¥–æ–∫—É–º–µ–Ω—Ç</div>
                </div>
                <div class="file-type" id="fileType"></div>
            </div>

            <button type="submit" class="btn-submit">–°–æ–∑–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é</button>
           
            <div class="success" id="successMessage">–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!</div>
        </form>
    </div>

    <script>
    document.addEventListener('DOMContentLoaded', function() {
        const fileInput = document.getElementById('file');
        const fileName = document.getElementById('fileName');
        const imagePreview = document.getElementById('imagePreview');
        const pdfPreview = document.getElementById('pdfPreview');
        const fileType = document.getElementById('fileType');
        const form = document.getElementById('uploadForm');
        const fileError = document.getElementById('fileError');
        const serverMessage = document.getElementById('serverMessage');

        // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Å–µ—Ä–≤–µ—Ä–∞
        function showServerMessage(text, isError = false) {
            serverMessage.textContent = text;
            serverMessage.className = isError ? 'server-message server-error' : 'server-message server-success';
            serverMessage.style.display = 'block';
            
            // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
            setTimeout(() => {
                serverMessage.style.display = 'none';
            }, 5000);
        }

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∞–π–ª–∞
        fileInput.addEventListener('change', function(e) {
            const file = e.target.files[0];
            if (file) {
                fileName.textContent = file.name;
               
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–∏–ø —Ñ–∞–π–ª–∞
                const isPDF = file.type.includes('pdf') || file.name.toLowerCase().endsWith('.pdf');
                fileType.textContent = isPDF ? 'PDF –¥–æ–∫—É–º–µ–Ω—Ç' : '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ';
                fileType.style.display = 'block';

                // –ü—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
                if (file.type.includes('image')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        imagePreview.src = e.target.result;
                        imagePreview.style.display = 'block';
                        pdfPreview.style.display = 'none';
                    }
                    reader.readAsDataURL(file);
                } else if (isPDF) {
                    imagePreview.style.display = 'none';
                    pdfPreview.style.display = 'block';
                } else {
                    imagePreview.style.display = 'none';
                    pdfPreview.style.display = 'none';
                }

                fileError.style.display = 'none';
            } else {
                fileName.textContent = '–§–∞–π–ª –Ω–µ –≤—ã–±—Ä–∞–Ω';
                imagePreview.style.display = 'none';
                pdfPreview.style.display = 'none';
                fileType.style.display = 'none';
            }
        });

        // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ñ–æ—Ä–º—ã –ø–µ—Ä–µ–¥ –æ—Ç–ø—Ä–∞–≤–∫–æ–π
        form.addEventListener('submit', function(e) {
            let isValid = true;

            if (!fileInput.files[0]) {
                fileError.style.display = 'block';
                isValid = false;
            } else {
                fileError.style.display = 'none';
            }

            if (!isValid) {
                e.preventDefault();
                showServerMessage('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —Ñ–∞–π–ª', true);
            }
        });

        // –ü–æ–∫–∞–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ URL –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.get('success') === 'true') {
            showServerMessage('–û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞!');
        }
        
        if (urlParams.get('error') === 'true') {
            const message = urlParams.get('message') || '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏';
            showServerMessage(message, true);
        }
    });
    </script>
</body>
</html>